%\VignetteIndexEntry{readCellH5}
%\VignettePackage{readCellH5}
%\VignetteKeywords{readCellh5}

\documentclass[10pt, a4paper]{article}

\RequirePackage{amsfonts,amsmath,amstext,amssymb,amscd}
\usepackage{graphicx}
\usepackage{verbatim}
\usepackage{color}
\usepackage{subfig}
\definecolor{darkblue}{rgb}{0.2,0.0,0.4}

\usepackage[bookmarksopen]{hyperref}

\hypersetup{%
    pdftitle={CellH5: An R-package for easy access to ch5-files},
    pdfauthor={H\"ofler Rudolf},
    pdfkeywords={cellh5, CellH5, hdf5, hdf},
    bookmarksnumbered,
    % pdfstartview={},
    urlcolor=blue,
    breaklinks=true,
    colorlinks=true,
    linkcolor=blue,
}

\topmargin -1.5cm
\oddsidemargin -0cm   % read Lamport p.163
\evensidemargin -0cm  % same as oddsidemargin but for left-hand pages
\textwidth 17cm
\textheight 24.5cm
\parindent0em

\newcommand{\lib}[1]{{\mbox{\normalfont\textsf{#1}}}}
\newcommand{\file}[1]{{\mbox{\normalfont\textsf{'#1'}}}}
\newcommand{\R}{{\mbox{\normalfont\textsf{R}}}}
\newcommand{\Rfunction}[1]{{\mbox{\normalfont\texttt{#1}}}}
\newcommand{\Robject}[1]{{\mbox{\normalfont\texttt{#1}}}}
\newcommand{\Rpackage}[1]{{\mbox{\normalfont\textsf{#1}}}}
\newcommand{\Rclass}[1]{{\mbox{\normalfont\textit{#1}}}}
\newcommand{\code}[1]{{\mbox{\normalfont\texttt{#1}}}}            
            \newcommand{\email}[1]{\mbox{\href{mailto:#1}{\textcolor{darkblue}{\normalfont{#1}}}}}
\newcommand{\web}[2]{\mbox{\href{#2}{\textcolor{darkblue}{\normalfont{#1}}}}}
                
%\SweaveOpts{echo=FALSE,keep.source=TRUE,eps=FALSE,results=hide,term=FALSE}
\SweaveOpts{keep.source=TRUE,eps=FALSE}


\begin{document}
\SweaveOpts{concordance=TRUE}
\title{CellH5: An R-package for easy access to ch5-files}
%\author{Rudolf H\"ofler, Christoph Sommer, \newline Michael Held, Bernd Fischer, Wolfgang Huber and Daniel Gerlich}

\maketitle

\section{Getting started}
The cellh5-source code is available on \href{https://github.com/CellH5/C5/archive/master.zip}{github}. 
Download and unpack the zip file. For installation follow the instructions in the README.md. 
After installation load the package:

<<loadSource>>==
library(cellh5)

# to show the help page
help(CellH5)
@
Open a file (note: the source package does not include demo data).
 
<<openfile>>==
c5f <- CellH5("../data/_all_positions.ch5")
@

\subsection{Demo scripts}
There are a some demo scripts in the repository. Each script can be downloaded \href{https://github.com/CellH5/C5}{here}. \\

\begin{tabular}{ l l }
  \file{demo\_cellh5.R} & Shows basic functionallity and the use of the introspection methods such \\ &  \Rfunction{C5HasObjects(...)} or \Rfunction{C5HasTimelapse(...)}.\\
  \file{demo\_image.R} & Load an image and plot it using the native \Rfunction{image(...)} method. \\
  \file{demo\_classimage.R} & render an image with color coded object contours and labels. \\
  \file{demo\_gallery.R} & Export Event gallery images to a user defined directory. Script is incredibly slow. \\ &  Exporting galleries is always slow.\\
\end{tabular}

\section{Reading basic information}
Read out specific information such as plate names, segmentation (channel-regions pairs), 
positions or timelapse tables.

<<loadSource>>==
# segmentation information 
chreg <- C5SegementationMasks(c5f)
plates <- C5Plates(c5f)
positions <- C5Positions(c5f, plates[[1]])
timelapse <- C5Timelapse(positions[[1]])
# available features for a particular segmentation region (primary__primary)
clfeatures <- C5FeatureNames(c5f, chreg[[1]])
@
Print data to the console:
<<loadSource>>==
head(timelapse)
# plate names
print(plates)
@

\subsection{Example: object counts}
Read the number of cells per frame and class name:
<<loadSource>>==
object_counts <- C5ObjectCounts(c5f, positions$W0_P0013, "primary__primary")
head(object_counts)
@

\subsection{Example: read image}
Be careful and don't overwrite the built-in function \texttt{image}. Set the option
\texttt{useRaster=TRUE} to increase the performance.
<<loadSource>>==
colors = grey.colors(256)
image_ <- C5ReadImage(c5f, positions$W0_P0013, "primary__primary", frame=1, zstack=1)
#plot the image
image(image_, col=colors, axes=FALSE, useRaster=TRUE)
@

\subsection{Example: read object details (main features)}
In this tutorial we refer as main features the mean intesity, its standard deviation and the size of an object.

<<loadSource>>==
object_details <- C5ObjectDetails(c5f, positions$W0_P0013, "primary__primary")
head(object_details)
@

\section{File introspection}
Finally, the method \Rfunction{C5FileInfo} gives you an overview of the file contents. 
Alternatively you can use \href{http://www.hdfgroup.org/products/java/hdf-java-html/hdfview/}{HDFView}.
\\
Some function are start with a prefix \texttt{"C5Has..."}. This methods are meant to determine 
if the hdf5 file contains e.g. \texttt{Objects, Events, Tracks} or if the objects have been classified at all.

<<loadSource>>==
if (C5HasEvents(positions$W0_P0013)) {
  events <- C5Events(c5f, positions$W0_P0013, "primary__primary",
                    include_branches=TRUE, return_indices=TRUE)
  event_features <- C5EventFeatures(c5f, positions$W0_P0013, 
                                    "primary__primary", TRUE, c("n2_avg", "roisize"))
} else {
  warning('no events found!')
}
@

Although \texttt{C5EventFeatures(...)} would return \texttt{NULL} if the file contains no events, it is recommend to use these function to improve code readablility.


\section{Currently implemented functions}
All methods start with the prefix \textbf{C5}. For detailed information of each
single function type in the \textit{R-terminal} \texttt{help(<C5FunctionName>)}
or \texttt{?<C5FunctionName>}. Below is a list of available functions. \\

\begin{tabular}{ l l }
  \Rfunction{C5BoundingBoxes} & read the bounding boxes of the object \\
  \Rfunction{C5Center} & return the centers of the object \\
  \Rfunction{C5ChannelRegions} & list of the segmentation regions \\
  \Rfunction{C5ClassifierDefinition} & read the classifier definition from the file \\
  \Rfunction{C5Close} & close cellh5 instance and release hdf5 resources \\
  \Rfunction{C5ContourImage} & plot a image with color coded contours on the screen \\
  \Rfunction{C5Contours} & read object contours from file \\
  \Rfunction{C5EventFeatures}	& read feature vectors per track found by the event selection \\
  \Rfunction{C5Events} & read tracks found by the event selection \\
  \Rfunction{C5ExportGallery} & export gallery images of the track to the hard disk \\
  \Rfunction{C5FeatureNames} & get a list of the feature names used for a particular classifier \\
  \Rfunction{C5FeaturesByName} & load features vectors. Features are selected by name \\
  \Rfunction{C5FileInfo} & print basic information of the content of a cellh5 file \\ 
  \Rfunction{C5GalleryImageByIndex}	& load a gallery image of an object by index\\
  \Rfunction{C5HasClassifiedObjects} & returns 'TRUE' if a position contains objects that has been labeled by a classifier \\
  \Rfunction{C5HasEvents}	& test if a position contains events found by event selection \\
  \Rfunction{C5HasObjects} & test if a position contains objects found by segmentation \\
  \Rfunction{C5HasTimelapse} & test if a position contains timelapse information \\
  \Rfunction{C5ObjectCounts} & read out the number of cells per frame and class label \\
  \Rfunction{C5ObjectDetails}	& read detailed object table. Table contains class labels, mean intensity, etc... \\
  \Rfunction{C5ObjectLabels} & list of all object\\
  \Rfunction{C5Orientation} & angle and eccentricity of an ellipse fit \\
  \Rfunction{C5Plates} & list of processed plates names from the file \\
  \Rfunction{C5Positions} & list of positions for a certain plate\\
  \Rfunction{C5PredictionProbabilities}	& prediction probabilities of a classification (if provided by the classifier)\\
  \Rfunction{C5Predictions} & read out the predicted class names \\
  \Rfunction{C5ReadImage}	& read an raw image as array \\
  \Rfunction{C5TimeIdx}	& return a list of frame numbers for each object \\
  \Rfunction{C5Timelapse}	& read the timelapse table for a given position \\
\end{tabular}

\end{document}